<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    .form-popup {
      position: fixed;
      top: -100%;
      left: 50%;
      transform: translateX(-50%);
      background-color: #ffffff;
      padding: 20px;
      border: 1px solid #ccc;
      box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
      width: 100%;
      max-width: 500px;
      z-index: 1000;
      border-radius: 8px;
      opacity: 0;
      visibility: hidden;
      transition: top 0.3s ease, opacity 0.3s ease, visibility 0s 0.3s;
    }

    .form-popup.active {
      visibility: visible;
      top: 3%;
      opacity: 1;
      transition: top 0.3s ease, opacity 0.3s ease;
    }

    .popup-label {
      position: absolute;
      top: -10px;
      left: 10px;
      font-size: 12px;
      background-color: #fff;
      padding: 0 5px;
      color: #007bff;
    }

    .severity.low {
      color: green;
    }

    .severity.medium {
      color: orange;
    }

    .severity.high {
      color: red;
    }

    .bug-container table {
      table-layout: fixed;
      width: 100%;
    }

    .filter-container {
      width: 250px;
    }

    /* Custom Scrollbars */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: #f1f1f1;
    }

    ::-webkit-scrollbar-thumb {
      background: #888;
      border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: #555;
    }

    /* Scrollable Table Body */
    .table-container {
      max-height: 400px;
      overflow-y: auto;
      position: relative;
    }

    /* Sticky Table Header */
    thead th {
      position: sticky;
      top: 0;
      background-color: #f8f9fa;
      z-index: 1;
    }
  </style>
</head>

<body>
  <%- include("./partials/navBar") %>

  <div class="container mt-4">
    <div class="d-flex justify-content-between mb-3">
      <div class="d-flex align-items-center">
        <i class="fas fa-search search-icon" id="searchIcon" style="cursor: pointer;"></i>
        <input type="text" id="search" class="form-control d-none" placeholder="Search bugs...">
      </div>
      <button id="addBugBtn" class="btn btn-primary">Add Bug</button>
    </div>

    <!-- Form Popup -->
    <div class="form-popup" id="taskForm">
      <h2>Create New Bug</h2>
      <form action="/create-bug" method="POST">
        <div class="mb-3">
          <label for="title" class="form-label">Title</label>
          <input type="text" class="form-control" id="title" name="title" required>
        </div>

        <div class="mb-3">
          <label for="description" class="form-label">Description</label>
          <textarea class="form-control" id="description" name="description"></textarea>
        </div>

        <div class="mb-3">
          <label for="assignedTo" class="form-label">Assign To</label>
          <select class="form-select" id="assignedTo" name="assignedTo" required>
            <option value="">Select Staff</option>
            <% staff.forEach(person => { %>
            <option value="<%= person._id %>"><%= person.firstName %> <%= person.lastName %></option>
            <% }) %>
          </select>
        </div>

        <div class="mb-3">
          <label for="reportedBy" class="form-label">Reported By</label>
          <select class="form-select" id="reportedBy" name="reportedBy" required>
            <option value="">Select Staff</option>
            <% staff.forEach(person => { %>
            <option value="<%= person._id %>"><%= person.firstName %> <%= person.lastName %></option>
            <% }) %>
          </select>
        </div>

        <div class="mb-3">
          <label for="status" class="form-label">Status</label>
          <select class="form-select" id="status" name="status">
            <option value="Open">Open</option>
            <option value="In Progress">In Progress</option>
            <option value="Resolved">Resolved</option>
          </select>
        </div>

        <div class="mb-3">
          <label for="severity" class="form-label">Severity</label>
          <select class="form-select" id="severity" name="severity">
            <option value="Low">Low</option>
            <option value="Medium" selected>Medium</option>
            <option value="High">High</option>
          </select>
        </div>

        <div class="mb-3">
          <label for="project" class="form-label">Project</label>
          <select class="form-select" id="project" name="project" required>
            <option value="">Select Project</option>
            <% project.forEach(proj => { %>
            <option value="<%= proj._id %>"><%= proj.name %></option>
            <% }) %>
          </select>
        </div>

        <button type="submit" class="btn btn-success">Create Task</button>
        <button type="button" id="closeFormBtn" class="btn btn-secondary">Close</button>
      </form>
    </div>

    <!-- Bug Data Table -->
    <div class="bug-container">
      <div class="mb-3 filter-container">
        <label for="severityFilter" class="form-label">Filter by Severity:</label>
        <select class="form-select" id="severityFilter">
          <option value="">All</option>
          <option value="Low">Low</option>
          <option value="Medium">Medium</option>
          <option value="High">High</option>
        </select>
      </div>

      <div class="table-container">
        <table class="table table-bordered table-striped" id="bugTable">
          <thead>
            <tr>
              <th>Sign No</th>
              <th>Title</th>
              <th>Description</th>
              <th>Assigned To</th>
              <th>Reported By</th>
              <th>Severity</th>
              <th>Status</th>
              <th>Project</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% bugs.forEach((bug, index) => { %>
            <tr>
              <td><%= index + 1 %></td>
              <td><%= bug.title %></td>
              <td><%= bug.description %></td>
              <td><%= bug.assignedTo ? bug.assignedTo.firstName + ' ' + bug.assignedTo.lastName : 'Unassigned' %></td>
              <td><%= bug.reportedBy ? bug.reportedBy.firstName + ' ' + bug.reportedBy.lastName : 'Not Reported' %></td>
              <td class="severity <%= bug.severity.toLowerCase() %>"><%= bug.severity %></td>
              <td><%= bug.status %></td>
              <td><%= bug.project ? bug.project.name : 'No Project' %></td>
              <td>
                <a href="/edit-bug/<%= bug._id %>" class="btn btn-warning btn-sm">Edit</a>
                <a href="/delete-bug/<%= bug._id %>" class="btn btn-danger btn-sm">Delete</a>
              </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <script>
    // Toggle form visibility
    const addBugBtn = document.getElementById("addBugBtn");
    const taskForm = document.getElementById("taskForm");
    const closeFormBtn = document.getElementById("closeFormBtn");

    addBugBtn.addEventListener("click", () => {
      taskForm.classList.add("active");
    });

    closeFormBtn.addEventListener("click", () => {
      taskForm.classList.remove("active");
    });

    // Search functionality
    const searchIcon = document.getElementById("searchIcon");
    const searchInput = document.getElementById("search");
    searchIcon.addEventListener("click", () => {
      searchInput.classList.toggle("d-none");
      searchInput.focus();
    });

    searchInput.addEventListener("input", function() {
      const filterText = searchInput.value.toLowerCase();
      const rows = document.querySelectorAll("#bugTable tbody tr");
      rows.forEach(row => {
        const titleCell = row.cells[1];
        const descriptionCell = row.cells[2];
        const text = titleCell.textContent.toLowerCase() + descriptionCell.textContent.toLowerCase();
        row.style.display = text.includes(filterText) ? "" : "none";
      });
    });

    // Filter functionality
    const severityFilter = document.getElementById("severityFilter");
    severityFilter.addEventListener("change", function() {
      const selectedSeverity = severityFilter.value;
      const rows = document.querySelectorAll("#bugTable tbody tr");
      rows.forEach(row => {
        const severityCell = row.cells[5];
        const severity = severityCell.textContent.trim().toLowerCase();
        row.style.display = (selectedSeverity === "" || severity === selectedSeverity.toLowerCase()) ? "" : "none";
      });
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>
